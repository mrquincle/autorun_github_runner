#!/bin/sh

__cleanup()
{
	SIGNAL=$1

	rm -f ./tmp/userkey.pub
	rmdir ./tmp

	if [ -n "$SIGNAL" ]
	then
		trap $SIGNAL
		kill -${SIGNAL} $$
	fi
}

__message()
{
	echo
	echo "Usage:"
	echo " $0 <key>"
	echo ""
	echo "Serve a public key."
	echo
	echo "Options:"
	echo " -k, --key                    public key to serve"
	echo
	echo " -h, --help                   display this help"
	echo
	echo "For more details see https://github.com/mrquincle/autorun_github_runner."
}

trap __message EXIT

# Requires GNU getopt. If long options are required, install it on OS X and FreeBSD.
OPTS=$(getopt --options k: \
	--long key:,help \
	--name "$0" -- "$@")

# If previous command returns non-zero exit code, something went wrong
if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi

eval set -- "$OPTS"

while true; do
	case "$1" in
		-k | --key )
			key="$2"
			shift 2
			;;
		-h | --help)
			exit 0
			;;
		-- )
			shift
			;;
		* )
			break;
			;;
	esac
done

if [ -z "$key" ]; then
	echo "Not enough arguments"
	exit
fi

trap __cleanup EXIT

mkdir -p ./tmp
cp $key ./tmp/userkey.pub

echo 'Start python3 http server on port 80 to serve "./tmp" directory (requires sudo)'
sudo python3 -m http.server --directory ./tmp 80

